@{
    ViewBag.Title = "Index";

    var configuration = (Be2BillNet.Be2BillConfiguration)this.ViewBag.Configuration;
}

<section class="content">
    <h1>Hi</h1>
    <p><a href="https://www.be2bill.com/">Be2Bill</a> is a french online payment provider. </p>
    <p>This non-official library will allow you to execute B2B payments with .NET languages (C#, VB.NET...)</p>

    <h2>Configure this app => @(this.ViewBag.IsConfigured ? "OK" : "TODO")</h2>
    <p>Check your web.config. </p>
    <pre class="dotconfig"><span class="element">&lt;<span class="name">configuration</span>&gt;</span>
  ...
  <span class="element">&lt;<span class="name">appSettings</span>&gt;</span>
    ...
    <span class="element">&lt;<span class="name">add</span> <span class="attr">key</span>="<span class="val">Be2Bill.ApiIdentifier</span>"    <span class="@(string.IsNullOrEmpty(configuration.ApiIdentifier) ? "error" : "ok")">value="@configuration.ApiIdentifier"</span> /&gt;</span>
    <span class="element">&lt;<span class="name">add</span> <span class="attr">key</span>="<span class="val">Be2Bill.ApiKey</span>"           <span class="@(string.IsNullOrEmpty(configuration.ApiKey) ? "error" : "ok")">value="@(new string(configuration.ApiKey.Select(c => '•').ToArray()))"</span> /&gt;</span>
    <span class="element">&lt;<span class="name">add</span> <span class="attr">key</span>="<span class="val">Be2Bill.PaymentSubmitUrl</span>" <span class="@(string.IsNullOrEmpty(configuration.PaymentSubmitUrl) ? "error" : "ok")">value="@configuration.PaymentSubmitUrl"</span> /&gt;</span>
    <span class="element">&lt;<span class="name">add</span> <span class="attr">key</span>="<span class="val">Be2Bill.RestUrl</span>"          <span class="@(string.IsNullOrEmpty(configuration.RestUrl) ? "error" : "ok")">value="@configuration.RestUrl"</span> /&gt;</span>
    ...
  <span class="element">&lt;/<span class="name">appSettings</span>&gt;</span>
  ...
<span class="element">&lt;/<span class="name">configuration</span>&gt;</span></pre>
    <p>Don't worry, you are not forced to use a config file. Check the sources ;)</p>
    <p>The ApiIdentifier and ApiKey have been sent to you via email.</p>

    <h2>Configure Be2Bill callback url</h2>
    <p>Unfortunately, B2B does not allow developers to specify the return url in each transaction. The one and only return url is to be configured in their back-office.</p>
    <ol>
        <li>Connect to your <a href="https://extranet-test.be2bill.com/" target="_blank">"sandbox" backoffice</a></li>
        <li>Find your account setting blah blah blah</li>
        <li>In <strong>field name</strong>, specify: <pre>@this.Request.Compose()@Url.Action("Return", "Be2Bill")</pre></li>
        <li>In <strong>field name</strong>, specify: <pre>@this.Request.Compose()@Url.Action("Return", "Be2Bill")</pre></li>
        <li>Save</li>
    </ol>


@if (this.ViewBag.IsConfigured)
{
    <h2>Make payments</h2>
    <p>
        @Html.ActionLink("With form", "PayForm", "Pay")
    </p>
}

</section>

@if (this.ViewBag.IsConfigured)
{
@*@Html.Action("PayForm", new { partial = true, })*@
}
